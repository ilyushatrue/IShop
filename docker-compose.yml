networks:
  ishop-network:
    driver: bridge

services:
  backend:
    user: "root"
    container_name: backend
    build:
      context: ./server
      dockerfile: IShop.Api/Dockerfile
    networks:
      - ishop-network
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DB=Host=postgres;Port=5432;Database=ishop;User Id=postgres;Password=Nhe[bY202$3;
      - AdminSettings__Password=${AdminSettings__Password}
      - JwtSettings__Secret=${JwtSettings__Secret}
    volumes:
      - /var/uploads:/app/uploads

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Nhe[bY202$3
      POSTGRES_DB: ishop
    ports:
      - "5432:5432"
    networks:
      - ishop-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  frontend:
    container_name: frontend
    build:
      context: ./client
      dockerfile: Dockerfile
    networks:
      - ishop-network
    depends_on:
      - backend
    environment:
      - NODE_ENV=release

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - ishop-network

volumes:
  postgres-data:
